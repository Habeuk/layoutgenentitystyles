<?php

/**
 *
 * @file
 * Primary module hooks for layout generate entity styles module.
 *
 * @DCG
 * This file is no longer required in Drupal 8.
 * @see https://www.drupal.org/node/2217931
 */
use Stephane888\Debug\Repositories\ConfigDrupal;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Ce hook s'execute uniquement à la sauvegarde d'une entité de configuration.
 * a un impact moins important sur le fonctionnement.
 * hook_ENTITY_TYPE_presave
 */
function layoutgenentitystyles_entity_view_display_presave(EntityInterface $entity) {
  $configs = ConfigDrupal::config('layoutgenentitystyles.settings');
  if (($configs['enabled_auto_generate_config'] || $configs['enabled_auto_generate_fieldconfig']) && !empty($configs['entity_auto_generate'][$entity->getEntityTypeId()])) {
    if (method_exists($entity, 'getSections')) {
      $status = true;
      /**
       * On va permettre à d'autre module de pouvoir ajouter des conditions de
       * validations surpplementaires.
       */
      \Drupal::moduleHandler()->invokeAll('layoutgenentitystyles_presave_alter_status', [
        &$status,
        $entity
      ]);
      if ($status) {
        if ($configs['enabled_auto_generate_config']) {
          /**
           *
           * @var \Drupal\layoutgenentitystyles\Services\LayoutgenentitystylesServices $style
           */
          $style = \Drupal::getContainer()->get('layoutgenentitystyles.add.style.theme');
          $style->generateSTyleFromEntity($entity);
        }
        if ($configs['enabled_auto_generate_fieldconfig']) {
          /**
           *
           * @var \Drupal\layoutgenentitystyles\Services\LayoutgenentitystylesServices $style
           */
          $style = \Drupal::getContainer()->get('layoutgenentitystyles.add.style.theme');
          $style->generateStyleFromFieldConfigDisplay($entity);
        }
      }
    }
  }
}

/**
 * hook_ENTITY_TYPE_presave
 * il faut accorder l'execution de cette function et des function similaire à
 * des utilisateurs ayent des droits suffisant.
 * Cela s'execute lors de la creation de chaque entité.
 */
function layoutgenentitystyles_entity_presave(EntityInterface $entity) {
  $configs = ConfigDrupal::config('layoutgenentitystyles.settings');
  if (!empty($configs['enabled_auto_generate_entity']) && !empty($configs['entity_auto_generate'][$entity->getEntityTypeId()]) && !$entity->isNew()) {
    $status = true;
    /**
     * On va permettre à d'autre module de pouvoir ajouter des conditions de
     * validations surpplementaires.
     */
    \Drupal::moduleHandler()->invokeAll('layoutgenentitystyles_presave_alter_status', [
      &$status,
      $entity
    ]);
    if ($status && method_exists($entity, 'hasField'))
      if ($entity->hasField('layout_builder__layout')) {
        $sections = [];
        $listSetions = $entity->get('layout_builder__layout')->getValue();
        $section_storage = $entity->getEntityTypeId() . '.' . $entity->bundle() . '.' . $entity->id();
        
        foreach ($listSetions as $value) {
          $sections[] = reset($value);
        }
        /**
         *
         * @var \Drupal\layoutgenentitystyles\Services\LayoutgenentitystylesServices $style
         */
        $style = \Drupal::getContainer()->get('layoutgenentitystyles.add.style.theme');
        $style->generateStyleFromSection($sections, $section_storage);
      }
  }
}



